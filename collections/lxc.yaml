collections:
  lxc_containers_io_bytes:
    run-every: 1s
    exit-codes: any
    store: database
    database:
      map-values:
        field-separator: " "
        fields:
          - name: container
            type: string
            field-index: 0
          - name: device
            type: string
            field-index: 1
          - name: operation
            type: string
            field-index: 2
          - name: bytes
            type: int
            field-index: 3
    script: |
      #!/bin/bash
        release=$(lsb_release -cs)

        function device_path() {
          set -- ${1##*[!0-9]*} ${2##*[!0-9]*}
          udevadm info --export-db |
          sed 's|^[^=]*DEVNAME=||
          \|^[^/]|!h;/MAJOR=/N
          \|='"$1\n.*=${2?}"'$|!d;g'
        }

        function device_stats() {
           if [ $release == "focal" ]; then
            regexp='.*lxc.payload.*/blkio.*.io_service_bytes$'
          else
            regexp='.*lxc\/.*/blkio.*.io_service_bytes$'
          fi
          for f in $(find /sys/fs/cgroup/blkio/ -regextype posix-extended -regex ${regexp}); do
            if [ $release == "focal" ]; then
              container_name=$(echo $f | awk -F '/' '{split($(NF-1),a,"."); print a[3]}')
            else
              container_name=$(echo $f | awk -F '/' '{print $(NF-1)}')
            fi
            grep -E '(Read|Write)' $f | while read -r line; do
              set -- $(awk 'match($1, /[0-9]+:[0-9]+$/) { split($1, d, ":"); print d[1], d[2], $2, $3 }'<<<$line)
              echo $container_name $(echo $(device_path $1 $2) | cut -d" " -f1) ${3,,} $4
             done
          done
      }

      device_stats